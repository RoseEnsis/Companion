<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="product">

	<!-- 그냥 order By= #{value} 처리할 경우 -->
	<select id="ProductOrderByValue" resultType="productBean">
		select * from product where category_id=#{category_id} order by #{value};
	</select>
	
	 <!-- product select *   -->
  	<select id="ProductSelectAll" resultType="productBean">
	  	select 
	  	(a.category_id, a.product_id, a.product_name, a.product_content, a.product_price, a.product_stock, a.product_date, 
	  	a.product_image, a.product_thumb, a.product_option1, a.product_option2, a.product_option3, a.product_option4, 
	  	a.product_option5,b.product_id, b.like_id, b.member_id 
		  	from `product` as a 
			  	left join `like` as b 
				  	 on a.product_id=b.product_id) 
	  	union
	  	 select
		  	  (a.like_id, a.member_id, a.product_id,b.category_id, b.product_id, b.product_name, b.product_content, b.product_price, 
		  	b.product_stock, b.product_date, b.product_image, b.product_thumb, b.product_option1, b.product_option2, b.product_option3, 
		  	b.product_option4, b.product_option5 
			  	from `like` as a 
			  		left join `product` as b 
			  			on a.product_id=b.product_id);
  	</select> 
  	
  	<!-- 상세 페이지  -->
  	<select id="ProductDetailOne" resultType="productBean" parameterType="int">
		select 
		distinct product.*,(select count(*) from `like` 
			where product.product_id=`like`.product_id) as like_id 
				from product left join`like` 
					on product.product_id=`like`.product_id where product.product_id=#{value};
	</select>
	
	<!--  카테고리별 기본 페이지 -->
	<select id="ProductCategorySelect" resultType="productBean" parameterType="int">
	  	select distinct product.*,(select count(*) from 
	  	`like` where product.product_id=`like`.product_id) as like_id 
		  	from product
		  		 left join`like` 
		  			on product.product_id=`like`.product_id where product.category_id=#{category_id};
  	</select> 
  	

	<!-- product count(*) -->
	<select id="count" resultType="int">
		select count(*) as listCnt
		 from `product` p, `category` c 
			where p.category_id=c.category_id and 
				(p.category_id=#{category_id} OR category_refid=#{category_id});
	</select>
	<!-- product list sorted by   -->	
	<select id="ListPage" resultType="productBean">
		<if test="sort =='date'">
			select p.*, (select count(*) from `like` l where p.product_id=l.product_id) as like_id 
				from `product` p, `category` c 
					where p.category_id=c.category_id and 
					(p.category_id=#{category_id} OR c.category_refid=#{category_id})
						ORDER BY p.product_id DESC limit #{startList},#{listSize}
		</if>
		<if test="sort =='like'">
			select p.*, (select count(l.product_id) from `like` l where p.product_id=l.product_id) as sum, 
				(select count(*) from `like` l where p.product_id=l.product_id) as like_id 
				from `product` p, `category` c
					where p.category_id=c.category_id and 
					(p.category_id=#{category_id} OR c.category_refid=#{category_id})
						ORDER BY sum DESC limit #{startList},#{listSize}
		</if>
		<if test="sort =='order'">
			select p.*, (select count(order_detail.order_detail_quantity) from `order_detail` where p.product_id=order_detail.product_id) as sum,
				(select count(*) from `like` l where p.product_id=l.product_id) as like_id 
				from `product` p, `category` c
					where p.category_id=c.category_id and 
					(p.category_id=#{category_id} OR c.category_refid=#{category_id})
						ORDER BY sum DESC limit #{startList},#{listSize}
		</if>
		<if test="sort =='low'">
			select p.*, (select count(*) from `like` l where p.product_id=l.product_id) as like_id 
				from `product` p, `category` c 
					where p.category_id=c.category_id and 
					(p.category_id=#{category_id} OR c.category_refid=#{category_id})
						ORDER BY p.product_price ASC limit #{startList},#{listSize}
		</if>
		<if test="sort =='high'">
			select p.*, (select count(*) from `like` l where p.product_id=l.product_id) as like_id  
				from `product` p, `category` c 
					where p.category_id=c.category_id and
					(p.category_id=#{category_id} OR c.category_refid=#{category_id})
						ORDER BY p.product_price DESC limit #{startList},#{listSize}
		</if>
	</select>
	<!-- product recommend List  -->
	<select id="ProductRecommendList" resultType="productBean" parameterType="int">
		 (select distinct order_detail.product_id,product.product_name,product.product_image from `order_detail`,product
 			where product.product_id = order_detail.product_id
 			and
			order_id=(select order_id from `order`
 			where member_id=(select member_id from `like` where product_id=#{product_id} is not null limit 1))
 			 is not null order by rand() limit 5); 
	</select>
	<select id="ProductRecommendList2" resultType="productBean" parameterType="int">
		 select distinct product_id,product_name,product_image from product order by rand() limit 5;
	</select>
	
	
</mapper>
  
